#! /bin/bash

tag=version2

#########################################################
# Download reference genome and build reference indices
#########################################################

if [ ! -f REF/index/hg38.fa.dict ]
then
  rm -rf REF/*
  mkdir -p REF/genome
  mkdir -p REF/index

  ref_genome_version=hg38
  ref_genome_url=http://hgdownload.cse.ucsc.edu/goldenPath/${ref_genome_version}/bigZips/${ref_genome_version}.fa.gz
  ref_genome_name=$(basename $ref_genome_url)
  wget -O REF/genome/$ref_genome_name $ref_genome_url

  docker run \
    -v $(pwd)/REF/genome:/data/ref_genome \
    -v $(pwd)/REF/index:/data/output_data \
    --user $(id -u):$(id -g) \
    --rm \
    srp33/somatic_wgs:$tag \
      index_fasta \
        -r $ref_genome_name \
        --log log.txt
fi

#########################################################
# Re-compress FASTQ files
#   (these files came from the Texas Cancer Research Biobank)
#########################################################

for f in FASTQ/*.fastq.bz2
do
  if [ -f $f ]
  then
    echo $f
    bunzip2 $f
  fi
done

for f in FASTQ/*.fastq
do
  if [ -f $f ]
  then
    echo $f
    gzip $f
  fi
done
exit

#########################################################
# Align using BWA
#########################################################

docker run \
  -v $(pwd)/REF/genome:/data/ref_genome \
  -v $(pwd)/REF/index:/data/ref_index \
  -v $(pwd)/SampleData:/data/input_data \
  -v /tmp:/data/output_data \
  --user $(id -u):$(id -g) \
  --rm \
  srp33/somatic_wgs:$tag \
  bwa_mem_align \
    -r ucsc.hg19.fasta.gz \
    -s1 101024.1.fastq.gz \
    -s2 101024.2.fastq.gz \
    -o test.bam \
    --log test.log \
    -t 25

# Trying it with a file and dir name that has spaces
#mkdir -p "/tmp/test dir"
#docker run \
#  -v $(pwd)/REF/genome:/data/ref_genome \
#  -v $(pwd)/ref_index:/data/ref_index \
#  -v $(pwd)/SampleData:/data/input_data \
#  -v "/tmp/test dir":/data/output_data \
#  --user $(id -u):$(id -g) \
#  --rm \
#  srp33/somatic_wgs:$tag \
#  bwa_mem_align \
#    -r ucsc.hg19.fasta.gz \
#    -s1 101024.1.fastq.gz \
#    -s2 101024.2.fastq.gz \
#    -o "test abc.bam" \
#    --log test.log \
#    -t 25

#rm -rf /tmp/sorted
#mkdir -p /tmp/sorted

#docker run \
#  -v /tmp:/data/bam_files \
#  -v /tmp/sorted:/data/output_data \
#  --user $(id -u):$(id -g) \
#  --rm \
#  srp33/somatic_wgs:$tag \
#  sort_bam \
#    -b test.bam \
#    -o test.bam \
#    --log test.log \
#    -t 25

#docker run \
#  -v /tmp/sorted:/data/bam_files \
#  --user $(id -u):$(id -g) \
#  --rm \
#  srp33/somatic_wgs:$tag \
#  index_bam \
#    -b test.bam \
#    -t 5

#rm -rf /tmp/marked
#mkdir -p /tmp/marked

#docker run \
#  -v /tmp/sorted:/data/bam_files \
#  -v /tmp/marked:/data/output_data \
#  --user $(id -u):$(id -g) \
#  --rm \
#  srp33/somatic_wgs:$tag \
#  mark_duplicates \
#    -b test.bam \
#    -o test.bam \
#    --log test.log \
#    -t 5

#rm -rf /tmp/sliced
#mkdir -p /tmp/sliced

#docker run \
#  -v /tmp/marked:/data/bam_files \
#  -v /tmp/sliced:/data/output_data \
#  --user $(id -u):$(id -g) \
#  --rm \
#  srp33/somatic_wgs:$tag \
#  slice_bam \
#    -b test.bam \
#    -r chr1 \
#    -o test.chr1.bam \
#    --log test.chr1.log \
#    -t 25

#docker run \
#  -v /tmp/marked:/data/bam_files \
#  -v /tmp/sliced:/data/output_data \
#  --user $(id -u):$(id -g) \
#  --rm \
#  srp33/somatic_wgs:$tag \
#  slice_bam \
#    -b test.bam \
#    -r chr2:1000-1000000 \
#    -o test.chr2.bam \
#    --log test.chr2.log \
#    -t 5

#rm -rf /tmp/merged
#mkdir -p /tmp/merged

#docker run \
#  -v /tmp/sliced:/data/bam_files \
#  -v /tmp/merged:/data/output_data \
#  --user $(id -u):$(id -g) \
#  --rm \
#  srp33/somatic_wgs:$tag \
#  merge_bams \
#    -b test.chr1.bam \
#    -b test.chr2.bam \
#    -o test.bam \
#    --log test.log \
#    -t 5

#rm -rf /tmp/read_groups
#mkdir -p /tmp/read_groups

#docker run \
#  -v /tmp:/data/bam_files \
#  -v /tmp/read_groups:/data/output_data \
#  --user $(id -u):$(id -g) \
#  --rm \
#  srp33/somatic_wgs:$tag \
#  add_read_groups \
#    -b test.bam \
#    -o test.bam \
#    --log test.log \
#    -id group \
#    -lb library \
#    -s sample
