#! /bin/bash

set -o errexit

source variables

mkdir -p BAM

function align {
  sample_prefix="$1"  
  sample_id="$2"

  for i in $(seq 1 ${num_fastq_chunks})
  do
    # I ran some simple tests and confirmed that this approach was faster than sorting as a separate step.
    docker run \
      -v $(pwd)/REF/genome:/data/ref_genome \
      -v $(pwd)/REF/index:/data/ref_index \
      -v $(pwd)/FASTQ_Trimmed:/data/input_data \
      -v $(pwd)/BAM:/data/output_data \
      --user $(id -u):$(id -g) \
      --rm \
      srp33/somatic_wgs:${tag} \
      bwa_mem_align \
        -r $ref_genome_version.fa \
        -s1 ${sample_prefix}.read1.fastq.gz \
        -s2 ${sample_prefix}.read2.fastq.gz \
        -rg "@RG\tID:${sample_prefix}\tPL:ILLUMINA\tPU:${sample_prefix}\tLB:${sample_prefix}\tSM:${sample_id}" \
        --sort true \
        --index true \
        -o ${sample_prefix}.bam \
        -t $num_threads \
        --nchunks ${num_fastq_chunks} \
        --process_chunk $i
  done
}

align TCRBOA7-N-WEX TCRBOA7-N-WEX
align TCRBOA7-T-WEX TCRBOA7-T-WEX
align TCRBOA7-N-WGS.lane1 TCRBOA7-N-WGS
align TCRBOA7-N-WGS.lane2 TCRBOA7-N-WGS
align TCRBOA7-T-WGS.lane1 TCRBOA7-T-WGS
align TCRBOA7-T-WGS.lane2 TCRBOA7-T-WGS
align TCRBOA7-T-WGS.lane3 TCRBOA7-T-WGS
align TCRBOA7-T-WGS.lane4 TCRBOA7-T-WGS
